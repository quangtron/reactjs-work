{"ast":null,"code":"var _jsxFileName = \"/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskEditting: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sort: {\n        by: 'name',\n        value: 1\n      }\n    };\n    this.onCloseForm = this.onCloseForm.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onUpdate = this.onUpdate.bind(this);\n    this.onFilter = this.onFilter.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  onCloseForm(params) {\n    this.setState({\n      isDisplayForm: params,\n      taskEditting: null\n    });\n  }\n\n  onDelete(id) {\n    var {\n      tasks\n    } = this.state;\n    var index = this.findIndex(id);\n\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    this.onCloseForm();\n  }\n\n  onUpdate(id) {\n    var {\n      tasks\n    } = this.state;\n    var index = this.findIndex(id);\n    var taskEditting = tasks[index];\n    this.setState({\n      taskEditting: taskEditting,\n      isDisplayForm: true\n    });\n  }\n\n  onFilter(filterName, filterStatus) {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  }\n\n  onSearch(keyword) {\n    this.setState({\n      keyword: keyword.toLowerCase()\n    });\n  }\n\n  onSort(sortBy, sortValue) {\n    this.setState({\n      sort: {\n        by: sortBy,\n        value: sortValue\n      }\n    });\n  }\n\n  render() {\n    var {\n      taskEditting,\n      filter,\n      keyword,\n      sort\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // if(filter){\n    // \tif(filter.name){\n    // \t\ttasks = tasks.filter((task) => {\n    // \t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n    // \t\t})\n    // \t}\n    // \ttasks = tasks.filter((task) => {\n    // \t\tif(filter.status === -1){\n    // \t\t\treturn tasks;\n    // \t\t} else {\n    // \t\t\treturn task.status === (filter.status === 1 ? true : false);\n    // \t\t}\n    // \t})\n    // }\n    // if(keyword){\n    // \ttasks = tasks.filter((task) => {\n    // \t\treturn task.name.toLowerCase().indexOf(keyword) !== -1;\n    // \t})\n    // }\n    // if(sort.by === 'name'){\n    // \ttasks.sort((a, b) => {\n    // \t\tvar nameA = a.name.toLowerCase();\n    // \t\tvar nameB = b.name.toLowerCase();\n    // \t\tif(nameA > nameB) return sort.value;\n    // \t\telse if (nameA < nameB) return -sort.value;\n    // \t\telse return 0;\n    // \t})\n    // } else {\n    // \ttasks.sort((a, b) => {\n    // \t\tif(a.status > b.status) return -sort.value;\n    // \t\telse if (a.status < b.status) return sort.value;\n    // \t\telse return 0;\n    // \t})\n    // }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      taskEditting: taskEditting,\n      onCloseForm: this.onCloseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Manager Work\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.props.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"Add work\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sort: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nvar mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js"],"names":["React","Component","TaskForm","Control","TaskList","connect","actions","App","constructor","props","state","taskEditting","filter","name","status","keyword","sort","by","value","onCloseForm","bind","onDelete","onUpdate","onFilter","onSearch","onSort","params","setState","isDisplayForm","id","tasks","index","findIndex","splice","localStorage","setItem","JSON","stringify","filterName","filterStatus","parseInt","toLowerCase","sortBy","sortValue","render","elmTaskForm","onToggleForm","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttaskEditting: null,\n\t\t\tfilter: {\n\t\t\t\tname: '',\n\t\t\t\tstatus: -1\n\t\t\t},\n\t\t\tkeyword: '',\n\t\t\tsort: {\n\t\t\t\tby: 'name',\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t}\n\t\tthis.onCloseForm = this.onCloseForm.bind(this);\n\t\tthis.onDelete = this.onDelete.bind(this);\n\t\tthis.onUpdate = this.onUpdate.bind(this);\n\t\tthis.onFilter = this.onFilter.bind(this);\n\t\tthis.onSearch = this.onSearch.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t}\n\n\tonCloseForm(params){\n\t\tthis.setState({\n\t\t\tisDisplayForm: params,\n\t\t\ttaskEditting: null\n\t\t})\n\t}\n\tonDelete(id){\n\t\tvar { tasks } = this.state;\n\t\tvar index = this.findIndex(id);\n\t\tif(index !== -1){\n\t\t\ttasks.splice(index, 1);\n\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t}\n\t\tthis.onCloseForm();\n\t}\n\tonUpdate(id){\n\t\tvar { tasks } = this.state;\n\t\tvar index = this.findIndex(id);\n\t\tvar taskEditting = tasks[index];\n\n\t\tthis.setState({\n\t\t\ttaskEditting: taskEditting,\n\t\t\tisDisplayForm: true\n\t\t})\n\t}\n\tonFilter(filterName, filterStatus){\n\t\tfilterStatus = parseInt(filterStatus, 10);\n\t\tthis.setState({\n\t\t\tfilter: {\n\t\t\t\tname: filterName.toLowerCase(),\n\t\t\t\tstatus: filterStatus\n\t\t\t}\n\t\t})\n\t}\n\tonSearch(keyword){\n\t\tthis.setState({\n\t\t\tkeyword: keyword.toLowerCase()\n\t\t})\n\t}\n\tonSort(sortBy, sortValue){\n\t\tthis.setState({\n\t\t\tsort: {\n\t\t\t\tby: sortBy,\n\t\t\t\tvalue: sortValue\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\tvar { taskEditting, filter, keyword, sort } = this.state;\n\t\tvar { isDisplayForm } = this.props;\n\t\t// if(filter){\n\t\t// \tif(filter.name){\n\t\t// \t\ttasks = tasks.filter((task) => {\n\t\t// \t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n\t\t// \t\t})\n\t\t// \t}\n\t\t\t\n\t\t// \ttasks = tasks.filter((task) => {\n\t\t// \t\tif(filter.status === -1){\n\t\t// \t\t\treturn tasks;\n\t\t// \t\t} else {\n\t\t// \t\t\treturn task.status === (filter.status === 1 ? true : false);\n\t\t// \t\t}\n\t\t// \t})\n\t\t// }\n\t\t// if(keyword){\n\t\t// \ttasks = tasks.filter((task) => {\n\t\t// \t\treturn task.name.toLowerCase().indexOf(keyword) !== -1;\n\t\t// \t})\n\t\t// }\n\t\t// if(sort.by === 'name'){\n\t\t// \ttasks.sort((a, b) => {\n\t\t// \t\tvar nameA = a.name.toLowerCase();\n\t\t// \t\tvar nameB = b.name.toLowerCase();\n\t\t// \t\tif(nameA > nameB) return sort.value;\n\t\t// \t\telse if (nameA < nameB) return -sort.value;\n\t\t// \t\telse return 0;\n\t\t// \t})\n\t\t// } else {\n\t\t// \ttasks.sort((a, b) => {\n\t\t// \t\tif(a.status > b.status) return -sort.value;\n\t\t// \t\telse if (a.status < b.status) return sort.value;\n\t\t// \t\telse return 0;\n\t\t// \t})\n\t\t// }\n\t\tvar elmTaskForm = isDisplayForm ? <TaskForm taskEditting={taskEditting} onCloseForm={this.onCloseForm} /> : '';\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1>Manager Work</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n\t\t\t\t\t\t{elmTaskForm}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Add work + Search Sort */}\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.props.onToggleForm}>\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\"></span>Add work\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/* Search Sort */}\n\t\t\t\t\t\t<Control onSearch={this.onSearch} onSort={this.onSort} sort={sort} />\n\t\t\t\t\t\t{/* List */}\n\t\t\t\t\t\t<div className=\"row mt-15\">\n\t\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\t\t\t\t\t\t\t\t<TaskList onDelete={this.onDelete} onUpdate={this.onUpdate} onFilter={this.onFilter} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nvar mapStateToProps = state => {\n\treturn {\n\t\tisDisplayForm: state.isDisplayForm\n\t}\n}\n\nvar mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm());\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}