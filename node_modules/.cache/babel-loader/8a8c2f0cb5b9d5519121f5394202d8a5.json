{"ast":null,"code":"var _jsxFileName = \"/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport _ from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter: {\n        name: '',\n        status: -1\n      },\n      keyword: '',\n      sort: {\n        by: 'name',\n        value: 1\n      }\n    };\n    this.onToggleForm = this.onToggleForm.bind(this);\n    this.onCloseForm = this.onCloseForm.bind(this);\n    this.onAddWork = this.onAddWork.bind(this);\n    this.onUpdateStatus = this.onUpdateStatus.bind(this);\n    this.findIndex = this.findIndex.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onUpdate = this.onUpdate.bind(this);\n    this.onFilter = this.onFilter.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSort = this.onSort.bind(this);\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      var tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  onToggleForm() {\n    if (this.state.taskEditting && this.state.isDisplayForm) {\n      this.setState({\n        taskEditting: null\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditting: null\n      });\n    }\n\n    console.log(this.state.tasks);\n  }\n\n  onCloseForm(params) {\n    this.setState({\n      isDisplayForm: params,\n      taskEditting: null\n    });\n  }\n\n  onAddWork(data) {\n    var {\n      tasks\n    } = this.state;\n\n    if (data.id === '') {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      var index = this.findIndex(data.id);\n      tasks[index] = data;\n    }\n\n    this.setState({\n      tasks: tasks,\n      taskEditting: null\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onUpdateStatus(id) {\n    var {\n      tasks\n    } = this.state; // var index = this.findIndex(id);\n\n    var index = _.findIndex(tasks, task => {\n      return task.id === id;\n    });\n\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n  }\n\n  findIndex(id) {\n    var {\n      tasks\n    } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  }\n\n  onDelete(id) {\n    var {\n      tasks\n    } = this.state;\n    var index = this.findIndex(id);\n\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    this.onCloseForm();\n  }\n\n  onUpdate(id) {\n    var {\n      tasks\n    } = this.state;\n    var index = this.findIndex(id);\n    var taskEditting = tasks[index];\n    this.setState({\n      taskEditting: taskEditting,\n      isDisplayForm: true\n    });\n  }\n\n  onFilter(filterName, filterStatus) {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  }\n\n  onSearch(keyword) {\n    this.setState({\n      keyword: keyword.toLowerCase()\n    });\n  }\n\n  onSort(sortBy, sortValue) {\n    this.setState({\n      sort: {\n        by: sortBy,\n        value: sortValue\n      }\n    });\n  }\n\n  render() {\n    var {\n      tasks,\n      isDisplayForm,\n      taskEditting,\n      filter,\n      keyword,\n      sort\n    } = this.state;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) {\n          return tasks;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (sort.by === 'name') {\n      tasks.sort((a, b) => {\n        var nameA = a.name.toLowerCase();\n        var nameB = b.name.toLowerCase();\n        if (nameA > nameB) return sort.value;else if (nameA < nameB) return -sort.value;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n      });\n    }\n\n    var elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      taskEditting: taskEditting,\n      onCloseForm: this.onCloseForm,\n      onAddWork: this.onAddWork,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Manager Work\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), \"Add work\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sort: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js"],"names":["React","Component","TaskForm","Control","TaskList","_","App","constructor","props","state","tasks","isDisplayForm","taskEditting","filter","name","status","keyword","sort","by","value","onToggleForm","bind","onCloseForm","onAddWork","onUpdateStatus","findIndex","onDelete","onUpdate","onFilter","onSearch","onSort","componentWillMount","localStorage","getItem","JSON","parse","setState","s4","Math","floor","random","toString","substring","generateID","console","log","params","data","id","push","index","setItem","stringify","task","result","forEach","splice","filterName","filterStatus","parseInt","toLowerCase","sortBy","sortValue","render","indexOf","a","b","nameA","nameB","elmTaskForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm'\nimport Control from './components/Control'\nimport TaskList from './components/TaskList'\nimport _ from 'lodash'\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: [],\n\t\t\tisDisplayForm: false,\n\t\t\ttaskEditting: null,\n\t\t\tfilter: {\n\t\t\t\tname: '',\n\t\t\t\tstatus: -1\n\t\t\t},\n\t\t\tkeyword: '',\n\t\t\tsort: {\n\t\t\t\tby: 'name',\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t}\n\t\tthis.onToggleForm = this.onToggleForm.bind(this);\n\t\tthis.onCloseForm = this.onCloseForm.bind(this);\n\t\tthis.onAddWork = this.onAddWork.bind(this);\n\t\tthis.onUpdateStatus = this.onUpdateStatus.bind(this);\n\t\tthis.findIndex = this.findIndex.bind(this);\n\t\tthis.onDelete = this.onDelete.bind(this);\n\t\tthis.onUpdate = this.onUpdate.bind(this);\n\t\tthis.onFilter = this.onFilter.bind(this);\n\t\tthis.onSearch = this.onSearch.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t}\n\tcomponentWillMount(){\n\t\tif(localStorage && localStorage.getItem('tasks')){\n\t\t\tvar tasks = JSON.parse(localStorage.getItem('tasks'));\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t}\n\t}\n\ts4(){\n\t\treturn Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n\t}\n\tgenerateID(){\n\t\treturn this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4(); \n\t}\n\tonToggleForm(){\n\t\tif(this.state.taskEditting && this.state.isDisplayForm){\n\t\t\tthis.setState({\n\t\t\t\ttaskEditting: null\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisDisplayForm: !this.state.isDisplayForm,\n\t\t\t\ttaskEditting: null\n\t\t\t})\n\t\t}\n\t\tconsole.log(this.state.tasks);\n\t}\n\tonCloseForm(params){\n\t\tthis.setState({\n\t\t\tisDisplayForm: params,\n\t\t\ttaskEditting: null\n\t\t})\n\t}\n\tonAddWork(data){\n\t\tvar { tasks } = this.state;\n\n\t\tif(data.id === ''){\n\t\t\tdata.id = this.generateID();\n\t\t\ttasks.push(data);\n\t\t} else {\n\t\t\tvar index = this.findIndex(data.id);\n\t\t\ttasks[index] = data;\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\ttasks: tasks,\n\t\t\ttaskEditting: null\n\t\t});\n\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t}\n\tonUpdateStatus(id){\n\t\tvar { tasks } = this.state;\n\t\t// var index = this.findIndex(id);\n\t\tvar index = _.findIndex(tasks, (task) => {\n\t\t\treturn task.id === id;\n\t\t})\n\t\tif(index !== -1){\n\t\t\ttasks[index].status = !tasks[index].status;\n\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t}\n\t}\n\tfindIndex(id){\n\t\tvar { tasks } = this.state;\n\t\tvar result = -1;\n\n\t\ttasks.forEach((task, index) => {\n\t\t\tif(task.id === id){\n\t\t\t\tresult = index;\n\t\t\t}\n\t\t})\n\t\treturn result;\n\t}\n\tonDelete(id){\n\t\tvar { tasks } = this.state;\n\t\tvar index = this.findIndex(id);\n\t\tif(index !== -1){\n\t\t\ttasks.splice(index, 1);\n\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t});\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t}\n\t\tthis.onCloseForm();\n\t}\n\tonUpdate(id){\n\t\tvar { tasks } = this.state;\n\t\tvar index = this.findIndex(id);\n\t\tvar taskEditting = tasks[index];\n\n\t\tthis.setState({\n\t\t\ttaskEditting: taskEditting,\n\t\t\tisDisplayForm: true\n\t\t})\n\t}\n\tonFilter(filterName, filterStatus){\n\t\tfilterStatus = parseInt(filterStatus, 10);\n\t\tthis.setState({\n\t\t\tfilter: {\n\t\t\t\tname: filterName.toLowerCase(),\n\t\t\t\tstatus: filterStatus\n\t\t\t}\n\t\t})\n\t}\n\tonSearch(keyword){\n\t\tthis.setState({\n\t\t\tkeyword: keyword.toLowerCase()\n\t\t})\n\t}\n\tonSort(sortBy, sortValue){\n\t\tthis.setState({\n\t\t\tsort: {\n\t\t\t\tby: sortBy,\n\t\t\t\tvalue: sortValue\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\tvar { tasks, isDisplayForm, taskEditting, filter, keyword, sort } = this.state;\n\t\tif(filter){\n\t\t\tif(filter.name){\n\t\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\tif(filter.status === -1){\n\t\t\t\t\treturn tasks;\n\t\t\t\t} else {\n\t\t\t\t\treturn task.status === (filter.status === 1 ? true : false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif(keyword){\n\t\t\ttasks = tasks.filter((task) => {\n\t\t\t\treturn task.name.toLowerCase().indexOf(keyword) !== -1;\n\t\t\t})\n\t\t}\n\t\tif(sort.by === 'name'){\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tvar nameA = a.name.toLowerCase();\n\t\t\t\tvar nameB = b.name.toLowerCase();\n\t\t\t\tif(nameA > nameB) return sort.value;\n\t\t\t\telse if (nameA < nameB) return -sort.value;\n\t\t\t\telse return 0;\n\t\t\t})\n\t\t} else {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif(a.status > b.status) return -sort.value;\n\t\t\t\telse if (a.status < b.status) return sort.value;\n\t\t\t\telse return 0;\n\t\t\t})\n\t\t}\n\t\tvar elmTaskForm = isDisplayForm ? <TaskForm taskEditting={taskEditting} onCloseForm={this.onCloseForm} onAddWork={this.onAddWork} /> : '';\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1>Manager Work</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n\t\t\t\t\t\t{elmTaskForm}\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Add work + Search Sort */}\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\"></span>Add work\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/* Search Sort */}\n\t\t\t\t\t\t<Control onSearch={this.onSearch} onSort={this.onSort} sort={sort} />\n\t\t\t\t\t\t{/* List */}\n\t\t\t\t\t\t<div className=\"row mt-15\">\n\t\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\t\t\t\t\t\t\t\t<TaskList tasks={tasks} onUpdateStatus={this.onUpdateStatus} onDelete={this.onDelete} onUpdate={this.onUpdate} onFilter={this.onFilter} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}