{"ast":null,"code":"var _jsxFileName = \"/Users/haquangtrong/Desktop/reacjs-manager-work/src/components/TaskForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onHandleChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      if (name === 'status') {\n        value = target.value === 'true' ? true : false;\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onClear = () => {\n      this.setState({\n        name: '',\n        status: true\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.onAddTask(this.state);\n      this.onClear();\n      this.props.onCloseForm();\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: true\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.taskEditting) {\n      this.setState({\n        id: this.props.taskEditting.id,\n        name: this.props.taskEditting.name,\n        status: this.props.taskEditting.status\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.taskEditting) {\n      this.setState({\n        id: nextProps.taskEditting.id,\n        name: nextProps.taskEditting.name,\n        status: nextProps.taskEditting.status\n      });\n    } else if (nextProps && nextProps.taskEditting === null) {\n      this.setState({\n        id: '',\n        name: '',\n        status: true\n      });\n    }\n  }\n\n  render() {\n    var {\n      id\n    } = this.state;\n    if (!this.props.isDisplayForm) return '';\n    return React.createElement(\"div\", {\n      className: \"panel panel-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, id !== '' ? 'Update Work' : 'Add Work', React.createElement(\"span\", {\n      className: \"fa fa-times-circle text-right\",\n      onClick: this.props.onCloseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"form-control\",\n      value: this.props.isUpdate ? this.props.taskEditting.name : this.state.name,\n      onChange: this.onHandleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Status:\"), React.createElement(\"select\", {\n      name: \"status\",\n      className: \"form-control\",\n      value: this.state.status,\n      onChange: this.onHandleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Active\"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Hide\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Save\")), \"\\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: this.onClear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-close mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Cancel\"))))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    taskEditting: state.taskEditting\n  };\n};\n\nvar mapDispatchToProps = (dispatch, props) => {\n  return {\n    onAddTask: task => {\n      dispatch(actions.addTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["/Users/haquangtrong/Desktop/reacjs-manager-work/src/components/TaskForm.js"],"names":["React","Component","connect","actions","TaskForm","constructor","props","onHandleChange","event","target","name","value","setState","onClear","status","onSubmit","preventDefault","onAddTask","state","onCloseForm","id","componentWillMount","taskEditting","componentWillReceiveProps","nextProps","render","isDisplayForm","isUpdate","mapStateToProps","mapDispatchToProps","dispatch","task","addTask","closeForm"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskForm extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            id: '',\n            name: '',\n            status: true\n        }\n    }\n    componentWillMount(){\n        if(this.props.taskEditting){\n            this.setState({\n                id: this.props.taskEditting.id,\n                name: this.props.taskEditting.name,\n                status: this.props.taskEditting.status\n            });\n        }\n    }\n    componentWillReceiveProps(nextProps){\n        if(nextProps && nextProps.taskEditting){\n            this.setState({\n                id: nextProps.taskEditting.id,\n                name: nextProps.taskEditting.name,\n                status: nextProps.taskEditting.status\n            });\n        } else if (nextProps && nextProps.taskEditting === null){\n            this.setState({\n                id: '',\n                name: '',\n                status: true\n            });\n        }\n    }\n    onHandleChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value;\n        if(name === 'status'){\n            value = target.value === 'true' ? true : false;\n        }\n        this.setState({\n            [name]: value\n        })\n    }\n    onClear = () => {\n        this.setState({\n            name: '',\n            status: true\n        })\n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAddTask(this.state);\n        this.onClear();\n        this.props.onCloseForm();\n    }\n\n\trender(){\n        var { id } = this.state;\n        if(!this.props.isDisplayForm) return '';\n\t\treturn (\n\t\t\t<div className=\"panel panel-warning\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">\n                        {id !== '' ? 'Update Work' : 'Add Work'}\n                        <span className=\"fa fa-times-circle text-right\" onClick={this.props.onCloseForm}></span>\n                    </h3>\n                </div>\n                <div className=\"panel-body\">\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Name:</label>\n                            <input type=\"text\" name=\"name\" className=\"form-control\" value={this.props.isUpdate ? this.props.taskEditting.name : this.state.name} onChange={this.onHandleChange} />\n                        </div>\n                        <label>Status:</label>\n                        <select name=\"status\" className=\"form-control\" value={this.state.status} onChange={this.onHandleChange}>\n                            <option value={true}>Active</option>\n                            <option value={false}>Hide</option>\n                        </select><br/>\n                        <div className=\"text-center\">\n                            <button type=\"submit\" className=\"btn btn-warning\">\n                                <span className=\"fa fa-plus mr-5\">Save</span>\n                            </button>&nbsp;\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.onClear}>\n                                <span className=\"fa fa-close mr-5\">Cancel</span>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nvar mapStateToProps = state => {\n    return{\n        isDisplayForm: state.isDisplayForm,\n        taskEditting: state.taskEditting\n    }\n};\n\nvar mapDispatchToProps = (dispatch, props) => {\n    return{\n        onAddTask: task => {\n            dispatch(actions.addTask(task));\n        },\n        onCloseForm: () => {\n            dispatch(actions.closeForm());\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\n"]},"metadata":{},"sourceType":"module"}