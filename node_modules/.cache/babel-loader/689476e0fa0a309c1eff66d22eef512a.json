{"ast":null,"code":"var _jsxFileName = \"/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sort: {\n        by: 'name',\n        value: 1\n      }\n    };\n    this.onFilter = this.onFilter.bind(this);\n    this.onSearch = this.onSearch.bind(this);\n    this.onSort = this.onSort.bind(this);\n    this.onToggleForm = this.onToggleForm.bind(this);\n  }\n\n  onToggleForm() {\n    if (this.props.taskEditting.id && this.props.isDisplayForm) {\n      this.props.onClearTaskEditting();\n    } else {\n      this.props.onToggleForm();\n      this.props.onClearTaskEditting();\n    }\n  }\n\n  onFilter(filterName, filterStatus) {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus\n      }\n    });\n  }\n\n  onSearch(keyword) {\n    this.setState({\n      keyword: keyword.toLowerCase()\n    });\n  }\n\n  onSort(sortBy, sortValue) {\n    this.setState({\n      sort: {\n        by: sortBy,\n        value: sortValue\n      }\n    });\n  }\n\n  render() {\n    var {\n      filter,\n      sort\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // if(filter){\n    // \tif(filter.name){\n    // \t\ttasks = tasks.filter((task) => {\n    // \t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n    // \t\t})\n    // \t}\n    // \ttasks = tasks.filter((task) => {\n    // \t\tif(filter.status === -1){\n    // \t\t\treturn tasks;\n    // \t\t} else {\n    // \t\t\treturn task.status === (filter.status === 1 ? true : false);\n    // \t\t}\n    // \t})\n    // }\n    // if(keyword){\n    // \ttasks = tasks.filter((task) => {\n    // \t\treturn task.name.toLowerCase().indexOf(keyword) !== -1;\n    // \t})\n    // }\n    // if(sort.by === 'name'){\n    // \ttasks.sort((a, b) => {\n    // \t\tvar nameA = a.name.toLowerCase();\n    // \t\tvar nameB = b.name.toLowerCase();\n    // \t\tif(nameA > nameB) return sort.value;\n    // \t\telse if (nameA < nameB) return -sort.value;\n    // \t\telse return 0;\n    // \t})\n    // } else {\n    // \ttasks.sort((a, b) => {\n    // \t\tif(a.status > b.status) return -sort.value;\n    // \t\telse if (a.status < b.status) return sort.value;\n    // \t\telse return 0;\n    // \t})\n    // }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Manager Work\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \"Add work\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sort: sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(TaskList, {\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nvar mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    taskEditting: state.taskEditting\n  };\n};\n\nvar mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTaskEditting: () => {\n      dispatch(actions.clearTaskEditting());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/haquangtrong/Desktop/reacjs-manager-work/src/App.js"],"names":["React","Component","TaskForm","Control","TaskList","connect","actions","App","constructor","props","state","sort","by","value","onFilter","bind","onSearch","onSort","onToggleForm","taskEditting","id","isDisplayForm","onClearTaskEditting","filterName","filterStatus","parseInt","setState","filter","name","toLowerCase","status","keyword","sortBy","sortValue","render","mapStateToProps","mapDispatchToProps","dispatch","toggleForm","clearTaskEditting"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE;AACLC,QAAAA,EAAE,EAAE,MADC;AAELC,QAAAA,KAAK,EAAE;AAFF;AADM,KAAb;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AACDG,EAAAA,YAAY,GAAE;AACb,QAAG,KAAKT,KAAL,CAAWU,YAAX,CAAwBC,EAAxB,IAA8B,KAAKX,KAAL,CAAWY,aAA5C,EAA0D;AACzD,WAAKZ,KAAL,CAAWa,mBAAX;AACA,KAFD,MAEO;AACN,WAAKb,KAAL,CAAWS,YAAX;AACA,WAAKT,KAAL,CAAWa,mBAAX;AACA;AACD;;AACDR,EAAAA,QAAQ,CAACS,UAAD,EAAaC,YAAb,EAA0B;AACjCA,IAAAA,YAAY,GAAGC,QAAQ,CAACD,YAAD,EAAe,EAAf,CAAvB;AACA,SAAKE,QAAL,CAAc;AACbC,MAAAA,MAAM,EAAE;AACPC,QAAAA,IAAI,EAAEL,UAAU,CAACM,WAAX,EADC;AAEPC,QAAAA,MAAM,EAAEN;AAFD;AADK,KAAd;AAMA;;AACDR,EAAAA,QAAQ,CAACe,OAAD,EAAS;AAChB,SAAKL,QAAL,CAAc;AACbK,MAAAA,OAAO,EAAEA,OAAO,CAACF,WAAR;AADI,KAAd;AAGA;;AACDZ,EAAAA,MAAM,CAACe,MAAD,EAASC,SAAT,EAAmB;AACxB,SAAKP,QAAL,CAAc;AACbf,MAAAA,IAAI,EAAE;AACLC,QAAAA,EAAE,EAAEoB,MADC;AAELnB,QAAAA,KAAK,EAAEoB;AAFF;AADO,KAAd;AAMA;;AAEDC,EAAAA,MAAM,GAAE;AACP,QAAI;AAAEP,MAAAA,MAAF;AAAUhB,MAAAA;AAAV,QAAmB,KAAKD,KAA5B;AACA,QAAI;AAAEW,MAAAA;AAAF,QAAoB,KAAKZ,KAA7B,CAFO,CAGP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,CADD,EAIC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAGY,aAAa,GAAG,qCAAH,GAA2C,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,EAKC;AAAK,MAAA,SAAS,EAAGA,aAAa,GAAG,qCAAH,GAA2C,yCAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKH,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,aADD,EAKC,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAE,KAAKF,QAAxB;AAAkC,MAAA,MAAM,EAAE,KAAKC,MAA/C;AAAuD,MAAA,IAAI,EAAEN,IAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALD,EAOC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKG,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CAPD,CALD,CAJD,CADD;AA0BA;;AA9G0B;;AAiH5B,IAAIqB,eAAe,GAAGzB,KAAK,IAAI;AAC9B,SAAO;AACNW,IAAAA,aAAa,EAAEX,KAAK,CAACW,aADf;AAENF,IAAAA,YAAY,EAAET,KAAK,CAACS;AAFd,GAAP;AAIA,CALD;;AAOA,IAAIiB,kBAAkB,GAAG,CAACC,QAAD,EAAW5B,KAAX,KAAqB;AAC7C,SAAO;AACNS,IAAAA,YAAY,EAAE,MAAM;AACnBmB,MAAAA,QAAQ,CAAC/B,OAAO,CAACgC,UAAR,EAAD,CAAR;AACA,KAHK;AAINhB,IAAAA,mBAAmB,EAAE,MAAM;AAC1Be,MAAAA,QAAQ,CAAC/B,OAAO,CAACiC,iBAAR,EAAD,CAAR;AACA;AANK,GAAP;AAQA,CATD;;AAWA,eAAelC,OAAO,CAAC8B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C7B,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsort: {\n\t\t\t\tby: 'name',\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t}\n\t\tthis.onFilter = this.onFilter.bind(this);\n\t\tthis.onSearch = this.onSearch.bind(this);\n\t\tthis.onSort = this.onSort.bind(this);\n\t\tthis.onToggleForm = this.onToggleForm.bind(this);\n\t}\n\tonToggleForm(){\n\t\tif(this.props.taskEditting.id && this.props.isDisplayForm){\n\t\t\tthis.props.onClearTaskEditting();\n\t\t} else {\n\t\t\tthis.props.onToggleForm();\n\t\t\tthis.props.onClearTaskEditting();\n\t\t}\n\t}\n\tonFilter(filterName, filterStatus){\n\t\tfilterStatus = parseInt(filterStatus, 10);\n\t\tthis.setState({\n\t\t\tfilter: {\n\t\t\t\tname: filterName.toLowerCase(),\n\t\t\t\tstatus: filterStatus\n\t\t\t}\n\t\t})\n\t}\n\tonSearch(keyword){\n\t\tthis.setState({\n\t\t\tkeyword: keyword.toLowerCase()\n\t\t})\n\t}\n\tonSort(sortBy, sortValue){\n\t\tthis.setState({\n\t\t\tsort: {\n\t\t\t\tby: sortBy,\n\t\t\t\tvalue: sortValue\n\t\t\t}\n\t\t})\n\t}\n\n\trender(){\n\t\tvar { filter, sort } = this.state;\n\t\tvar { isDisplayForm } = this.props;\n\t\t// if(filter){\n\t\t// \tif(filter.name){\n\t\t// \t\ttasks = tasks.filter((task) => {\n\t\t// \t\t\treturn task.name.toLowerCase().indexOf(filter.name) !== -1;\n\t\t// \t\t})\n\t\t// \t}\n\t\t\t\n\t\t// \ttasks = tasks.filter((task) => {\n\t\t// \t\tif(filter.status === -1){\n\t\t// \t\t\treturn tasks;\n\t\t// \t\t} else {\n\t\t// \t\t\treturn task.status === (filter.status === 1 ? true : false);\n\t\t// \t\t}\n\t\t// \t})\n\t\t// }\n\t\t// if(keyword){\n\t\t// \ttasks = tasks.filter((task) => {\n\t\t// \t\treturn task.name.toLowerCase().indexOf(keyword) !== -1;\n\t\t// \t})\n\t\t// }\n\t\t// if(sort.by === 'name'){\n\t\t// \ttasks.sort((a, b) => {\n\t\t// \t\tvar nameA = a.name.toLowerCase();\n\t\t// \t\tvar nameB = b.name.toLowerCase();\n\t\t// \t\tif(nameA > nameB) return sort.value;\n\t\t// \t\telse if (nameA < nameB) return -sort.value;\n\t\t// \t\telse return 0;\n\t\t// \t})\n\t\t// } else {\n\t\t// \ttasks.sort((a, b) => {\n\t\t// \t\tif(a.status > b.status) return -sort.value;\n\t\t// \t\telse if (a.status < b.status) return sort.value;\n\t\t// \t\telse return 0;\n\t\t// \t})\n\t\t// }\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1>Manager Work</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : ''}>\n\t\t\t\t\t\t<TaskForm />\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* Add work + Search Sort */}\n\t\t\t\t\t<div className={ isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\"></span>Add work\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t{/* Search Sort */}\n\t\t\t\t\t\t<Control onSearch={this.onSearch} onSort={this.onSort} sort={sort} />\n\t\t\t\t\t\t{/* List */}\n\t\t\t\t\t\t<div className=\"row mt-15\">\n\t\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\t\t\t\t\t\t\t\t<TaskList onFilter={this.onFilter} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nvar mapStateToProps = state => {\n\treturn {\n\t\tisDisplayForm: state.isDisplayForm,\n\t\ttaskEditting: state.taskEditting\n\t}\n}\n\nvar mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm());\n\t\t},\n\t\tonClearTaskEditting: () => {\n\t\t\tdispatch(actions.clearTaskEditting());\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}