{"ast":null,"code":"var _jsxFileName = \"/Users/haquangtrong/Desktop/reacjs-manager-work/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n      var filter = {\n        name: name === 'filterName' ? value : this.state.filterName,\n        status: name === 'filterStatus' ? value : this.state.filterStatus\n      };\n      this.props.onFilter(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var {\n      tasks,\n      keyword,\n      filter\n    } = this.props;\n    var {\n      filterName,\n      filterStatus\n    } = this.state;\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    if (filter.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1;\n      });\n    }\n\n    if (filterStatus === 1) {\n      tasks = tasks.filter(task => {\n        return task.status === 1;\n      });\n    }\n\n    var elmTasks = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        task: task,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"STT\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"filterName\",\n      className: \"form-control\",\n      value: filterName,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      name: \"filterStatus\",\n      className: \"form-control\",\n      value: filterStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Hide\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Active\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), elmTasks));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    keyword: state.keyword,\n    filter: state.filter\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilter: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/Users/haquangtrong/Desktop/reacjs-manager-work/src/components/TaskList.js"],"names":["React","Component","TaskItem","connect","actions","TaskList","constructor","props","onChange","event","target","name","value","filter","state","filterName","status","filterStatus","onFilter","setState","render","tasks","keyword","task","toLowerCase","indexOf","elmTasks","map","index","id","mapStateToProps","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TaskItem from './TaskItem'\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskList extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            filterName: '',\n            filterStatus: -1\n        }\n    }\n    onChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.value;\n\n        var filter = {\n            name: name === 'filterName' ? value : this.state.filterName,\n            status: name === 'filterStatus' ? value : this.state.filterStatus\n        }\n\n        this.props.onFilter(filter);\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n\trender(){\n        var { tasks, keyword, filter } = this.props;\n        var { filterName, filterStatus } = this.state;\n        if(keyword){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(keyword) !== -1;\n            })\n        }\n        if(filter.name){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1;\n            })\n        }\n        if(filterStatus === 1){\n            tasks = tasks.filter((task) => {\n                return task.status === 1;\n            })\n        }\n        var elmTasks = tasks.map((task, index) => {\n            return <TaskItem key={task.id} task={task} index={index} />\n        })\n\n\t\treturn (\n\t\t\t<table className=\"table table-bordered table-hover\">\n                <thead>\n                    <tr>\n                        <th className=\"text-center\">STT</th>\n                        <th className=\"text-center\">Name</th>\n                        <th className=\"text-center\">Status</th>\n                        <th className=\"text-center\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <input type=\"text\" name=\"filterName\" className=\"form-control\" value={filterName} onChange={this.onChange} />\n                        </td>\n                        <td>\n                            <select name=\"filterStatus\" className=\"form-control\" value={filterStatus} onChange={this.onChange}>\n                                <option value={-1}>All</option>\n                                <option value={0}>Hide</option>\n                                <option value={1}>Active</option>\n                            </select>\n                        </td>\n                        <td></td>\n                    </tr>\n                    {elmTasks}\n                </tbody>\n            </table>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    return{\n        tasks: state.tasks,\n        keyword: state.keyword,\n        filter: state.filter\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onFilter: filter => {\n            dispatch(actions.filterTask(filter));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\n"]},"metadata":{},"sourceType":"module"}